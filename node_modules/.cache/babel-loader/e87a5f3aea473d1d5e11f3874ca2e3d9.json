{"ast":null,"code":"import _asyncToGenerator from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/Users/ongyongen/Desktop/studyPal-local/studyPal/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Forum/CollaborativeCanvas.js\";\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { rangeContainsMarker } from '@fullcalendar/react';\nimport { db } from \"../../firebase\";\nimport { collection, query, doc, setDoc, addDoc, updateDoc, serverTimestamp, onSnapshot } from \"firebase/firestore\";\nimport { UserAuth } from '../../context/AuthContext';\nimport { NavLink } from 'react-router-dom';\nimport Title from '../Title/Title.js';\nimport './CollaborativeCanvas.css';\n\nvar CollaborativeCanvas = function CollaborativeCanvas() {\n  var _UserAuth = UserAuth(),\n      user = _UserAuth.user;\n\n  var keys = _toConsumableArray(Array(2500).keys());\n\n  var values = Array(2500).fill(\"white\");\n  var arr = {};\n  keys.forEach(function (key) {\n    return arr[key] = values[key];\n  });\n\n  var _useState = useState(\"black\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentColour = _useState2[0],\n      setCurrentColour = _useState2[1];\n\n  var _useState3 = useState(arr),\n      _useState4 = _slicedToArray(_useState3, 2),\n      canvasColour = _useState4[0],\n      setCanvasColour = _useState4[1];\n\n  var toggleColour = function toggleColour(e) {\n    setCurrentColour(function () {\n      return e.target.value;\n    });\n  };\n\n  var saveCanvas = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e) {\n      var elemId, elem, docRef, newDoc;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              elemId = e.target.id;\n              elem = document.getElementById(elemId);\n              elem.style.backgroundColor = currentColour;\n              canvasColour[elemId] = elem.style.backgroundColor;\n              setCanvasColour(function () {\n                return canvasColour;\n              });\n              docRef = doc(collection(db, \"canvas\"), \"main-canvas\");\n              newDoc = {\n                createdAt: serverTimestamp(),\n                canvas: canvasColour\n              };\n              _context.next = 9;\n              return setDoc(doc(db, \"canvas\", \"main-canvas\"), newDoc);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function saveCanvas(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var active = true;\n    var q = query(collection(db, \"canvas\"));\n    console.log(\"Retrieving comments list\");\n    var getAllComments = onSnapshot(q, function (querySnapshot) {\n      querySnapshot.forEach(function (doc) {\n        console.log(doc.data()['canvas']);\n        setCanvasColour(function () {\n          return doc.data()['canvas'];\n        });\n      });\n    });\n    return function () {\n      active = false;\n    };\n  }, [user.uid]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    name: \"Collaborative Canvas\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"canvas-description\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"Create a collaborative pixel art by placing a block upon completion of each 1 hour study session!\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }\n  }), \"Come back 1 hour again to place another block\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"colour-picker-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    className: \"nav-link-canvas\",\n    to: \"/forum\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"colour-picker-caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Colour Picker: \"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"colour-picker\",\n    type: \"color\",\n    onChange: toggleColour,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"squaregrid\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, keys.map(function (index) {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"cell\",\n      onClick: saveCanvas,\n      id: index,\n      style: {\n        backgroundColor: canvasColour[index]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 38\n      }\n    });\n  })));\n};\n\nexport default CollaborativeCanvas;","map":{"version":3,"names":["React","useState","useEffect","rangeContainsMarker","db","collection","query","doc","setDoc","addDoc","updateDoc","serverTimestamp","onSnapshot","UserAuth","NavLink","Title","CollaborativeCanvas","user","keys","Array","values","fill","arr","forEach","key","currentColour","setCurrentColour","canvasColour","setCanvasColour","toggleColour","e","target","value","saveCanvas","elemId","id","elem","document","getElementById","style","backgroundColor","docRef","newDoc","createdAt","canvas","active","q","console","log","getAllComments","querySnapshot","data","uid","map","index"],"sources":["/Users/ongyongen/Desktop/studyPal-local/studyPal/src/components/Forum/CollaborativeCanvas.js"],"sourcesContent":["import React from 'react'\n\nimport { useState, useEffect } from 'react'\nimport { rangeContainsMarker } from '@fullcalendar/react'\n\n\nimport { db } from \"../../firebase\"\nimport { collection, \n         query,\n         doc,\n         setDoc, \n         addDoc,\n         updateDoc, \n         serverTimestamp,\n         onSnapshot } from \"firebase/firestore\"\n\nimport { UserAuth } from '../../context/AuthContext'\n\nimport { NavLink } from 'react-router-dom'\n\nimport Title from '../Title/Title.js'\nimport './CollaborativeCanvas.css'\n\nconst CollaborativeCanvas = () => {\n    const {user}  = UserAuth()\n\n    let keys = [...Array(2500).keys()]\n    let values = Array(2500).fill(\"white\")\n    let arr = {}\n    keys.forEach((key) => arr[key] = values[key])\n\n    \n\n    const [currentColour, setCurrentColour] = useState(\"black\")\n    const [canvasColour, setCanvasColour] = useState(arr)\n\n    const toggleColour = (e) => {\n        setCurrentColour(() => e.target.value)\n    }\n\n    const saveCanvas = async (e) => {\n        let elemId = e.target.id\n        let elem = document.getElementById(elemId)\n        elem.style.backgroundColor = currentColour\n        canvasColour[elemId] = elem.style.backgroundColor\n        setCanvasColour(() => canvasColour)\n    \n        const docRef = doc(collection(db, \"canvas\"),\"main-canvas\")\n        let newDoc = {\n            createdAt: serverTimestamp(),\n            canvas: canvasColour\n        }\n        await setDoc(doc(db, \"canvas\", \"main-canvas\"), newDoc) \n    }\n\n    useEffect(() => {\n        let active = true\n          const q = query(collection(db, \"canvas\"))\n          console.log(\"Retrieving comments list\")\n          const getAllComments = onSnapshot(q, (querySnapshot) => {\n            querySnapshot.forEach((doc) => {\n                console.log(doc.data()['canvas'])\n                setCanvasColour(() => doc.data()['canvas'])\n            })\n          })\n          return () => {active = false}\n    }, [user.uid])\n\n\n    return (\n        <div>\n            <Title name={\"Collaborative Canvas\"} />\n            <p className=\"canvas-description\">Create a collaborative pixel art by placing a block upon completion of each 1 hour study session!\n            <br></br><br></br>Come back 1 hour again to place another block</p>\n            <div className=\"colour-picker-container\">\n                <NavLink \n                    className=\"nav-link-canvas\"\n                    to='/forum'>Back\n                </NavLink>\n                <p className=\"colour-picker-caption\">Colour Picker: </p>\n                <input\n                    className=\"colour-picker\"\n                    type='color'\n                    onChange={toggleColour}\n                />\n            </div>\n            <div class=\"squaregrid\">\n                {keys.map((index) => <button className={\"cell\"} onClick={saveCanvas} \n                id={index} style={{backgroundColor: canvasColour[index]}}/>)}\n            </div>\n        </div>\n      \n        \n    )\n}\n\nexport default CollaborativeCanvas;\n\n\n\n            "],"mappings":"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"},"metadata":{},"sourceType":"module"}